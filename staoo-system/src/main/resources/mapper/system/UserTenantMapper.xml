<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.staoo.system.mapper.UserTenantMapper">
    <resultMap type="com.staoo.system.domain.UserTenant" id="UserTenantResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="roleType" column="role_type"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectUserTenantVo">
        select id, user_id, tenant_id, role_type, status, create_by, create_time, update_by, update_time
        from sys_user_tenant
    </sql>

    <!-- 新增用户-租户关联 -->
    <insert id="insert" parameterType="com.staoo.system.domain.UserTenant" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user_tenant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="tenantId != null">tenant_id,</if>
            <if test="roleType != null">role_type,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="tenantId != null">#{tenantId},</if>
            <if test="roleType != null">#{roleType},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime}</if>
        </trim>
    </insert>

    <!-- 根据ID删除用户-租户关联 -->
    <delete id="deleteById" parameterType="Long">
        delete from sys_user_tenant where id = #{id}
    </delete>

    <!-- 根据用户ID和租户ID删除关联 -->
    <delete id="deleteByUserAndTenant">
        delete from sys_user_tenant where user_id = #{userId} and tenant_id = #{tenantId}
    </delete>

    <!-- 更新用户-租户关联信息 -->
    <update id="update" parameterType="com.staoo.system.domain.UserTenant">
        update sys_user_tenant
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
            <if test="roleType != null">role_type = #{roleType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <!-- 更新用户在租户中的角色类型 -->
    <update id="updateRoleType">
        update sys_user_tenant
        set role_type = #{roleType}
        where user_id = #{userId} and tenant_id = #{tenantId}
    </update>

    <!-- 更新用户在租户中的状态 -->
    <update id="updateStatus">
        update sys_user_tenant
        set status = #{status}
        where user_id = #{userId} and tenant_id = #{tenantId}
    </update>

    <!-- 根据ID查询用户-租户关联信息 -->
    <select id="selectById" parameterType="Long" resultMap="UserTenantResult">
        <include refid="selectUserTenantVo"/>
        where id = #{id}
    </select>

    <!-- 根据用户ID和租户ID查询关联信息 -->
    <select id="selectByUserAndTenant" resultMap="UserTenantResult">
        <include refid="selectUserTenantVo"/>
        where user_id = #{userId} and tenant_id = #{tenantId}
    </select>

    <!-- 根据用户ID查询其所有租户关联 -->
    <select id="selectByUserId" parameterType="Long" resultMap="UserTenantResult">
        <include refid="selectUserTenantVo"/>
        where user_id = #{userId}
        order by create_time desc
    </select>

    <!-- 根据租户ID查询其所有用户关联 -->
    <select id="selectByTenantId" parameterType="Long" resultMap="UserTenantResult">
        <include refid="selectUserTenantVo"/>
        where tenant_id = #{tenantId}
        order by create_time desc
    </select>

    <!-- 查询用户在指定租户中的角色类型 -->
    <select id="selectRoleTypeByUserAndTenant" resultType="Integer">
        select role_type
        from sys_user_tenant
        where user_id = #{userId} and tenant_id = #{tenantId}
    </select>

    <!-- 查询用户是否属于指定租户 -->
    <select id="existsByUserAndTenant" resultType="Boolean">
        select exists(
            select 1
            from sys_user_tenant
            where user_id = #{userId} and tenant_id = #{tenantId}
        )
    </select>
</mapper>
