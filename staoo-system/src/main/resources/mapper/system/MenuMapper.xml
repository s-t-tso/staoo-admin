<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.staoo.system.mapper.MenuMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.staoo.system.domain.Menu">
        <id column="id" property="id" />
        <result column="menu_name" property="menuName" />
        <result column="parent_id" property="parentId" />
        <result column="menu_type" property="menuType" />
        <result column="path" property="path" />
        <result column="component" property="component" />
        <result column="perms" property="perms" />
        <result column="icon" property="icon" />
        <result column="order_num" property="orderNum" />
        <result column="status" property="status" />
        <result column="visible" property="visible" />
        <result column="cacheable" property="cacheable" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 基础SQL片段 -->
    <sql id="Base_Column_List">
        id, menu_name, parent_id, menu_type, path, component, perms, icon, order_num, status, visible,
        cacheable, create_by, create_time, update_by, update_time, remark
    </sql>

    <!-- 查询条件SQL片段 -->
    <sql id="Query_Condition">
        <where>
            <if test="menuName != null and menuName != ''">
                AND menu_name LIKE CONCAT('%', #{menuName}, '%')
            </if>
            <if test="menuType != null">
                AND menu_type = #{menuType}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="visible != null">
                AND visible = #{visible}
            </if>
            <if test="parentId != null">
                AND parent_id = #{parentId}
            </if>
            <if test="path != null and path != ''">
                AND path LIKE CONCAT('%', #{path}, '%')
            </if>
            <if test="perms != null and perms != ''">
                AND perms LIKE CONCAT('%', #{perms}, '%')
            </if>
        </where>
    </sql>

    <!-- 根据ID查询菜单 -->
    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE id = #{id}
    </select>

    <!-- 查询菜单列表 -->
    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        <include refid="Query_Condition" />
        ORDER BY parent_id, order_num
    </select>

    <!-- 根据请求参数查询菜单列表 -->
    <select id="getListByRequest" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        <where>
            <if test="request.tenantId != null">
                AND tenant_id = #{request.tenantId}
            </if>
            <if test="request.menuName != null and request.menuName != ''">
                AND menu_name LIKE CONCAT('%', #{request.menuName}, '%')
            </if>
            <if test="request.parentId != null">
                AND parent_id = #{request.parentId}
            </if>
            <if test="request.menuType != null">
                AND menu_type = #{request.menuType}
            </if>
            <if test="request.status != null">
                AND status = #{request.status}
            </if>
            <if test="request.visible != null">
                AND visible = #{request.visible}
            </if>
            <if test="request.perms != null and request.perms != ''">
                AND perms LIKE CONCAT('%', #{request.perms}, '%')
            </if>
            <if test="request.keyword != null and request.keyword != ''">
                AND (
                    menu_name LIKE CONCAT('%', #{request.keyword}, '%')
                    OR path LIKE CONCAT('%', #{request.keyword}, '%')
                    OR perms LIKE CONCAT('%', #{request.keyword}, '%')
                )
            </if>
        </where>
        ORDER BY parent_id, order_num
    </select>

    <!-- 查询菜单总数 -->
    <select id="getCount" resultType="int">
        SELECT COUNT(1)
        FROM sys_menu
        <include refid="Query_Condition" />
    </select>

    <!-- 新增菜单 -->
    <insert id="insert" parameterType="com.staoo.system.domain.Menu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_menu (
            menu_name, parent_id, menu_type, path, component, perms, icon,
            order_num, status, visible, cacheable, create_by, create_time,
            update_by, update_time, remark
        ) VALUES (
            #{menuName}, #{parentId}, #{menuType}, #{path}, #{component}, #{perms}, #{icon},
            #{orderNum}, #{status}, #{visible}, #{cacheable}, #{createBy}, #{createTime},
            #{updateBy}, #{updateTime}, #{remark}
        )
    </insert>

    <!-- 更新菜单 -->
    <update id="update" parameterType="com.staoo.system.domain.Menu">
        UPDATE sys_menu
        <set>
            <if test="menuName != null and menuName != ''">
                menu_name = #{menuName},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="menuType != null">
                menu_type = #{menuType},
            </if>
            <if test="path != null and path != ''">
                path = #{path},
            </if>
            <if test="component != null and component != ''">
                component = #{component},
            </if>
            <if test="perms != null and perms != ''">
                perms = #{perms},
            </if>
            <if test="icon != null and icon != ''">
                icon = #{icon},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="visible != null">
                visible = #{visible},
            </if>
            <if test="cacheable != null">
                cacheable = #{cacheable},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除菜单 -->
    <delete id="deleteById">
        DELETE FROM sys_menu WHERE id = #{id}
    </delete>

    <!-- 批量删除菜单 -->
    <delete id="deleteByIds">
        DELETE FROM sys_menu WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 批量更新菜单状态 -->
    <update id="updateStatusByIds">
        UPDATE sys_menu
        SET status = #{status}
        WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 根据角色ID查询菜单列表 -->
    <select id="getMenusByRoleId" resultMap="BaseResultMap">
        SELECT DISTINCT
        m.id, m.menu_name, m.parent_id, m.menu_type, m.path, m.component, m.perms, m.icon,
        m.sort, m.status, m.visible, m.cacheable, m.create_by, m.create_time,
        m.update_by, m.update_time, m.remark
        FROM sys_menu m
        INNER JOIN sys_role_menu rm ON m.id = rm.menu_id
        WHERE rm.role_id = #{roleId}
        <!-- 使用MenuStatusEnum.ENABLED的code值(1)表示启用状态 -->
        AND m.status = 1
        ORDER BY m.parent_id, m.order_num
    </select>

    <!-- 根据用户ID查询菜单列表 -->
    <select id="getMenusByUserId" resultMap="BaseResultMap">
        SELECT DISTINCT
        m.id, m.menu_name, m.parent_id, m.menu_type, m.path, m.component, m.perms, m.icon,
        m.sort, m.status, m.visible, m.cacheable, m.create_by, m.create_time,
        m.update_by, m.update_time, m.remark
        FROM sys_menu m
        INNER JOIN sys_role_menu rm ON m.id = rm.menu_id
        INNER JOIN sys_user_role ur ON rm.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        <!-- 使用MenuStatusEnum.ENABLED的code值(1)表示启用状态 -->
        AND m.status = 1
        AND m.visible = 1
        ORDER BY m.parent_id, m.order_num
    </select>

    <!-- 根据用户ID查询权限标识列表 -->
    <select id="getPermissionsByUserId" resultType="java.lang.String">
        SELECT DISTINCT m.perms
        FROM sys_menu m
        INNER JOIN sys_role_menu rm ON m.id = rm.menu_id
        INNER JOIN sys_user_role ur ON rm.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        <!-- 使用MenuStatusEnum.ENABLED的code值(1)表示启用状态 -->
        AND m.status = 1
        AND m.perms IS NOT NULL
        AND m.perms != ''
    </select>

    <!-- 查询所有菜单权限标识 -->
    <select id="getAllPermissions" resultType="java.lang.String">
        SELECT DISTINCT perms
        FROM sys_menu
        <!-- 使用MenuStatusEnum.ENABLED的code值(1)表示启用状态 -->
        WHERE status = 1
        AND perms IS NOT NULL
        AND perms != ''
    </select>

    <!-- 查询菜单树结构 -->
    <select id="getMenuTree" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        <include refid="Query_Condition" />
        ORDER BY parent_id, order_num
    </select>

    <!-- 查询角色菜单树结构 -->
    <select id="getRoleMenuTree" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE id IN (
            SELECT menu_id FROM sys_role_menu WHERE role_id = #{roleId}
        )
        <include refid="Query_Condition" />
        ORDER BY parent_id, sort
    </select>

    <!-- 查询用户菜单树结构 -->
    <select id="getUserMenuTree" resultMap="BaseResultMap">
        SELECT DISTINCT
        m.id, m.menu_name, m.parent_id, m.menu_type, m.path, m.component, m.perms, m.icon,
        m.sort, m.status, m.visible, m.cacheable, m.create_by, m.create_time,
        m.update_by, m.update_time, m.remark
        FROM sys_menu m
        INNER JOIN sys_role_menu rm ON m.id = rm.menu_id
        INNER JOIN sys_user_role ur ON rm.role_id = ur.role_id
        <include refid="Query_Condition" />
        AND ur.user_id = #{userId}
        ORDER BY m.parent_id, m.sort
    </select>

    <!-- 根据父ID查询菜单数量 -->
    <select id="getCountByParentId" resultType="int">
        SELECT COUNT(1)
        FROM sys_menu
        WHERE parent_id = #{parentId}
        AND status = 1
    </select>

    <!-- 检查菜单名称唯一性 -->
    <select id="checkMenuNameUnique" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE menu_name = #{menuName}
        AND parent_id = #{parentId}
        <if test="id != null">
            AND id != #{id}
        </if>
    </select>

    <!-- 检查菜单权限唯一性 -->
    <select id="checkMenuPermsUnique" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE perms = #{perms}
        <if test="id != null">
            AND id != #{id}
        </if>
    </select>

    <!-- 检查菜单路由唯一性 -->
    <select id="checkMenuPathUnique" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE path = #{path}
        <if test="id != null">
            AND id != #{id}
        </if>
    </select>

    <!-- 检查菜单组件唯一性 -->
    <select id="checkMenuComponentUnique" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_menu
        WHERE component = #{component}
        <if test="id != null">
            AND id != #{id}
        </if>
    </select>
</mapper>
